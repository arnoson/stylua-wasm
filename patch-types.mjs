import { readFileSync, writeFileSync } from 'fs'

// Because we use json to pass the config object to rust the is of type `any`.
// So we append our own `Config` type and adjust the autogenerated types
// accordingly :) Also some enums are exported but not used in the call
// signatures.

const config = readFileSync('./config.d.ts', { encoding: 'utf8' })
const text = readFileSync('./pkg/stylua_wasm.d.ts', { encoding: 'utf8' })
  // Add the config type right after the second line.
  .replace('/* eslint-disable */', `/* eslint-disable */\n${config}`)
  .replace('@param {any} config', '@param {Config} config')
  .replace('config: any', 'config: Config')
  .replace(
    '@param {number | undefined} output_verification',
    '@param {OutputVerification | undefined} output_verification'
  )
  .replace(
    'output_verification?: number',
    'output_verification?: OutputVerification'
  )

writeFileSync('./pkg/stylua_wasm.d.ts', text)
